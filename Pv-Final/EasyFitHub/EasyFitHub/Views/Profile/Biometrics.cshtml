@model EasyFitHub.Models.Profile.Client
@*
    Author: Francisco Silva
    View destinada à visualização de Biométricas
*@
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fontsource-inter@4">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Istok+Web&display=swap">
    <link rel="stylesheet" href="~/css/Biometry.css" />
    <link rel="stylesheet" href="~/css/ImagePicker.css" />
    <script src="~/js/ImagePicker.js"></script>
</head>

@{
    ViewData["Title"] = "Biometrics";
}

@section Header {
    <div class="navbar2">
        <a href="@Url.Action("Index", "Authentication")"><img class="img2" src="/lib/imagens/Home.PNG" /></a>
        <p class="profile">Biometry Data</p>
        <a href="@Url.Action("Index", "Profile", new { userId = Model.UserId})"><img class="img3" src="/lib/imagens/ProfileV2.PNG" /></a>
    </div>
}

<div class="profile-section">
    <div id="viewDiv" style="display:block;margin-top:80px;margin-right:60px">
        <img id="profileImage" class="ImagePicker" alt="Profile Image" src="/lib/imagens/ProfileV2.PNG" />
        <br />
    </div>
    <div class="profile-details">
        <p class="id"><strong>ID:</strong> @Model.UserId</p>
        <p class="name">@Model.User.Name @Model.User.Surname</p>
        <p>
            @{
                DateOnly dataDeNascimento = Model.User.BirthDate;
                int idade = DateTime.Today.Year - dataDeNascimento.Year;
                if (DateTime.Today.Month < dataDeNascimento.Month || (DateTime.Today.Month == dataDeNascimento.Month && DateTime.Today.Day < dataDeNascimento.Day))
                {
                    idade--;
                }
            }
        </p>
        <p class="age">@idade</p>
    </div>
    <div>
        <a href="@Url.Action("BiometricsEdit", "Profile", new { userId = Model.UserId})"><img class="tool-image" src="/lib/imagens/Settings.PNG" alt="Imagem da Ferramenta"></a>
    </div>
</div>
<div class="form-group">
    @Html.TextBox("Weight", null, new { @class = "form-control", placeholder = "Weight: " + Model.Biometrics.Weigth, @readonly = "readonly" })<br />
    @Html.TextBox("Height", null, new { @class = "form-control", placeholder = "Height: " + Model.Biometrics.Height, @readonly = "readonly" })<br />
    @Html.TextBox("WaterPercentage", null, new { @class = "form-control", placeholder = "Water Percentage: " + Model.Biometrics.WaterPercentage, @readonly = "readonly" })<br />
    @Html.TextBox("FatMass", null, new { @class = "form-control", placeholder = "Fat Mass: " + Model.Biometrics.FatMass, @readonly = "readonly" })<br />
    @Html.TextBox("LeanMass", null, new { @class = "form-control", placeholder = "Lean Mass: " + Model.Biometrics.LeanMass, @readonly = "readonly" })<br />
    @Html.TextBox("BodyMassIndex", null, new { @class = "form-control", placeholder = "Body Mass Index: " + Model.Biometrics.BodyMassIndex, @readonly = "readonly" })<br />
    @Html.TextBox("MetabolicAge", null, new { @class = "form-control", placeholder = "Metabolic Age: " + Model.Biometrics.MetabolicAge, @readonly = "readonly" })<br />
    @Html.TextBox("VisceralFat", null, new { @class = "form-control", placeholder = "Visceral Fat: " + Model.Biometrics.VisceralFat, @readonly = "readonly" })<br />
</div>

@section Scripts {
    @{
        string? resultMessage = @TempData["ResultMessage"] as string;
        <script>
            const defaultSrc = "/lib/imagens/ProfileV2.PNG";
            var image = @Html.Raw(Json.Serialize(Model.Data.Image));
            var images = [];

            if (image) images.push(image);

            function actionAlert() {
                var message = @Html.Raw(Json.Serialize(resultMessage));

                if (message) {
                    alert(message);
                }
            }
        </script>
    }
}
